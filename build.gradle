import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort

plugins {
    id 'java'
    id 'jacoco'
    id("io.qameta.allure") version "2.12.0"
    id("com.github.spotbugs") version "6.1.7"
}

group = 'org.usvm'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
jacoco {
    toolVersion = "0.8.11"
}

dependencies {
    implementation("io.javalin:javalin:6.4.0")
    implementation("org.slf4j:slf4j-simple:2.0.16")
    implementation("com.google.code.gson:gson:2.12.1")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.2")


    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation("io.rest-assured:rest-assured:5.5.1")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation("org.mockito:mockito-core:5.15.2")

    testImplementation("io.qameta.allure:allure-junit5:2.24.0")

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'
}


test {
    useJUnitPlatform()
    ignoreFailures = true
    finalizedBy jacocoTestReport, allureReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

allure {
    version = '2.24.0'
    useJUnit5 {
        version = '2.24.0'
    }
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = Effort.MAX
    reportsDir = layout.buildDirectory.dir("reports/spotbugs")
}

tasks.named('spotbugsMain') {
    reports {
        html {
            enabled = true
            destination = layout.buildDirectory.file("reports/spotbugs/main.html").get().asFile
        }
        xml {
            enabled = true
        }
    }
}

tasks.named('spotbugsTest') {
    reports {
        html {
            enabled = true
            destination = layout.buildDirectory.file("reports/spotbugs/test.html").get().asFile
        }
        xml {
            enabled = true
        }
    }
}




check.dependsOn jacocoTestCoverageVerification
